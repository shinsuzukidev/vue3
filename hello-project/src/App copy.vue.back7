<script setup lang="ts">
import { ref, computed } from "vue";
import OneMember from "./components/OneMember.vue";

const memberListInit = new Map<number, Member>();
memberListInit.set(1, {
  id: 1,
  name: "sato",
  email: "sato@xxx.co.jp",
  points: 35,
  note: "初回特典あり"
});

memberListInit.set(2, {
  id: 2,
  name: "sena",
  email: "seba@xxx.co.jp",
  points: 30
});

const memberList = ref(memberListInit);

const totalPoints = computed((): number => {
  let total = 0;
  for (const member of memberList.value.values()) {
    total += member.points;
  }
  return total;
});

interface Member {
  id: number;
  name: string;
  email: string;
  points: number;
  note?: string;
}

const onIncrementPoint = (id: number, upPoint: number): void => {
  const member = memberList.value.get(id);
  if (member) {
    //member.points++;
    member.points += upPoint;
  }
};
</script>

<template>
  <section>
    <h1>member list</h1>
    <p>total point:{{ totalPoints }}</p>

    <OneMember
      v-for="[id, member] in memberList"
      v-bind:key="id"
      v-bind:id="id"
      v-bind:name="member.name"
      v-bind:email="member.email"
      v-bind:points="member.points"
      v-bind:note="member.note"
      v-on:incrementPoint="onIncrementPoint"
    />
  </section>
</template>

<style scoped></style>
